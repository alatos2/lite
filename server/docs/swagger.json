{
    "openapi": "3.0.0",
    "info": {
      "description": "Property Pro Lite is a platform where people can create and/or search properties for sale or rent.",
      "version": "1.0.0",
      "title": "Lite"
    },
    "servers": [
      {
        "url": "https://lite-ts.herokuapp.com/api/v1"
      }
    ],
    "tags": [
      {
        "name": "User (Agent)",
        "description": "All actions by Agent"
      },
      {
        "name": "User",
        "description": "All actions by user"
      },
      {
        "name": "Admin",
        "description": "All actions by admin"
      }
    ],
    "paths": {
      "/auth/signup": {
        "post": {
          "tags": [
            "User"
          ],
          "summary": "Register a new agent",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "firstName",
                    "lastName",
                    "email",
                    "phoneNumber",
                    "address",
                    "password",
                    "confirmPassword"
                  ],
                  "properties": {
                    "firstName": {
                      "type": "string",
                      "minLength": 4
                    },
                    "lastName": {
                      "type": "string",
                      "minLength": 4
                    },
                    "email": {
                      "type": "string",
                      "minLength": 4,
                      "pattern": "/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/"
                    },
                    "phoneNumber": {
                      "type": "string",
                      "minLength": 4
                    },
                    "address": {
                      "type": "string",
                      "minLength": 4
                    },
                    "password": {
                      "type": "string",
                      "minLength": 4
                    },
                    "confirmPassword": {
                      "type": "string",
                      "minLength": 4
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Successfully created",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            },
            "400": {
              "description": "Missing required parameter"
            }
          }
        }
      },
      "/auth/signin": {
        "post": {
          "tags": [
              "User"
          ],
          "summary": "Logs in as registered agent",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "email",
                    "password"
                  ],
                  "properties": {
                    "email": {
                      "type": "string",
                      "minLength": 4,
                      "pattern": "/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/"
                    },
                    "password": {
                      "type": "string",
                      "minLength": 4
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            },
            "400": {
              "description": "Missing required parameter"
            },
            "500": {
              "description": "Server Error"
            }
          }
        }
      },
      "/property": {
        "post": {
          "tags": [
            "User (Agent)"
          ],
          "summary": "Creates property advert",
          "security": [
            {
              "ApiKeyAuth": []
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "price",
                    "state",
                    "city",
                    "address",
                    "type",
                    "imageUrl",
                    "status"
                  ],
                  "properties": {
                    "price": {
                      "type": "number",
                      "minLength": 4
                    },
                    "state": {
                      "type": "string",
                      "minLength": 4
                    },
                    "city": {
                      "type": "string",
                      "minLength": 4
                    },
                    "address": {
                      "type": "string",
                      "minLength": 4
                    },
                    "type": {
                      "type": "string",
                      "minLength": 4
                    },
                    "imageUrl": {
                      "type": "string",
                      "minLength": 4
                    },
                    "status": {
                      "type": "string",
                      "minLength": 4
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Successfully created",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CreateAccount"
                  }
                }
              }
            },
            "400": {
              "description": "Missing required parameter"
            },
            "500": {
              "description": "Server Error"
            }
          }
        }
      },
      "/property/:id": {
        "patch": {
          "tags": [
            User (Agent)
          ],
          "summary": "Updates property data",
          "security": [
            {
              "ApiKeyAuth": []
            }
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Account"
                  }
                }
              }
            },
            "401": {
              "description": "Access denied, no token provided"
            },
            "403": {
              "description": "Forbidden: Access is denied"
            },
            "404": {
              "description": "Account not found"
            },
            "500": {
              "description": "Server Error"
            }
          }
        }
      },
      "/accounts/:id": {
        "delete": {
          "tags": [
            User (Agent)
          ],
          "summary": "Delete property advert",
          "security": [
            {
              "ApiKeyAuth": []
            }
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Account successfully deleted"
            },
            "400": {
              "description": "Account not found"
            },
            "403": {
              "description": "Forbidden: Access is denied"
            },
            "500": {
              "description": "Server Error"
            }
          }
        },
      "/property-specific/": {
        "get": {
          "tags": [
            User
          ],
          "summary": "Find property by advert type",
          "parameters": [
            {
              "name": "type",
              "in": "path",
              "description": "Returns advert type",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Account"
                  }
                }
              }
            },
            "404": {
              "description": "Advert type does not exist"
            },
            "500": {
              "description": "Server Error"
            }
          }
        }
      },
      "/property": {
        "get": {
          "tags": [
            User
          ],
          "summary": "Get all property",
          "security": [
            {
              "ApiKeyAuth": []
            }
          ],
          "description": "Returns a single transaction",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID of transaction to return",
              "required": true,
              "schema": {
                "type": "integer"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Transaction"
                  }
                }
              }
            },
            "401": {
              "description": "Access denied, no token provided"
            },
            "404": {
              "description": "Transaction not found"
            },
            "500": {
              "description": "Server Error"
            }
          }
        }
      },
      "/user/admin": {
        "post": {
          "tags": [
            "Admin"
          ],
          "summary": "Register a new user account",
          "security": [
            {
              "ApiKeyAuth": []
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "type",
                    "firstName",
                    "lastName",
                    "email",
                    "password",
                    "confirmPassword"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "firstName": {
                      "type": "string",
                      "minLength": 4
                    },
                    "lastName": {
                      "type": "string",
                      "minLength": 4
                    },
                    "email": {
                      "type": "string",
                      "minLength": 4,
                      "pattern": "/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/"
                    },
                    "password": {
                      "type": "string",
                      "minLength": 4
                    },
                    "confirmPassword": {
                      "type": "string",
                      "minLength": 4
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Successfully created",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            },
            "400": {
              "description": "Missing required parameter"
            },
            "403": {
              "description": "Forbidden: Access is denied"
            },
            "500": {
              "description": "Server Error"
            }
          }
        }
      }
    },
    "components": {
      "securitySchemes": {
        "ApiKeyAuth": {
          "type": "apiKey",
          "in": "header",
          "name": "authorization"
        }
      },
      "schemas": {
        "User": {
          "type": "object",
          "properties": {
            "token": {
              "type": "string"
            },
            "id": {
              "type": "integer",
              "format": "int64"
            },
            "firstName": {
              "type": "string"
            },
            "lastName": {
              "type": "string"
            },
            "email": {
              "type": "string"
            }
          }
        },
        "CreateAccount": {
          "type": "object",
          "properties": {
            "accountNumber": {
              "type": "integer",
              "format": "int64"
            },
            "firstName": {
              "type": "string"
            },
            "lastName": {
              "type": "string"
            },
            "openingBalance": {
              "type": "number",
              "format": "double"
            }
          }
        },
        "Account": {
          "type": "object",
          "properties": {
            "createdOn": {
              "type": "string",
              "format": "date-time"
            },
            "accountNumber": {
              "type": "integer",
              "format": "int64"
            },
            "ownerEmail": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "status": {
              "type": "string"
            },
            "balance": {
              "type": "number",
              "format": "double"
            }
          }
        },
        "Transaction": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64"
            },
            "createdOn": {
              "type": "string",
              "format": "date-time"
            },
            "type": {
              "type": "string"
            },
            "accountNumber": {
              "type": "integer"
            },
            "amount": {
              "type": "number",
              "format": "double"
            },
            "oldBalance": {
              "type": "number",
              "format": "double"
            },
            "newbalance": {
              "type": "number",
              "format": "double"
            }
          }
        }
      }
    }
  }